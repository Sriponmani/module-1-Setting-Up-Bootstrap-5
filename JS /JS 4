// Array to hold events
const events = [];

// Function to add an event (reusable)
function addEvent(name, date, seats, category) {
  events.push({ name, date, seats, category });
}

// Closure to track total registrations per category
function registrationTracker() {
  const registrations = {}; // private object

  return function(category) {
    if (!registrations[category]) {
      registrations[category] = 0;
    }
    registrations[category]++;
    console.log(`Total registrations for ${category}: ${registrations[category]}`);
  };
}

// Create an instance of tracker
const trackRegistration = registrationTracker();

// Function to register a user for an event
function registerUser(eventName, category) {
  const event = events.find(e => e.name === eventName);
  if (!event) {
    console.error("Event not found");
    return;
  }
  if (event.seats <= 0) {
    console.error("No seats available");
    return;
  }
  event.seats--;
  console.log(`User registered for ${eventName}. Seats left: ${event.seats}`);

  // Track the registration by category
  trackRegistration(category);
}

// Higher-order function to filter events dynamically
function filterEventsByCategory(category, callback) {
  const filteredEvents = events.filter(event => event.category === category);
  callback(filteredEvents);
}

// Example usage:

// Add some events
addEvent("Community Cleanup", "2025-06-15", 10, "Environment");
addEvent("Tech Meetup", "2025-07-20", 15, "Technology");
addEvent("Book Fair", "2025-08-05", 5, "Education");
addEvent("Farmers Market", "2025-09-01", 20, "Community");

// Register users
registerUser("Community Cleanup", "Environment");
registerUser("Tech Meetup", "Technology");
registerUser("Tech Meetup", "Technology");

// Filter and display events for a category
filterEventsByCategory("Technology", filtered => {
  console.log("Filtered Technology Events:");
  filtered.forEach(event => {
    console.log(`- ${event.name} on ${event.date}, Seats: ${event.seats}`);
  });
});
