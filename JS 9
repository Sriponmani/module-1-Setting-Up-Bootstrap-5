https://mockapi.io/projects/your-project/events

<div id="loadingSpinner" style="display:none;">Loading events...</div>
<div id="eventsContainer"></div>

const eventsContainer = document.querySelector("#eventsContainer");
const loadingSpinner = document.querySelector("#loadingSpinner");

// Function to render events
function renderEvents(events) {
  eventsContainer.innerHTML = "";
  if (!events.length) {
    eventsContainer.textContent = "No events found.";
    return;
  }
  events.forEach(event => {
    const div = document.createElement("div");
    div.textContent = `${event.name} - ${event.date}`;
    eventsContainer.appendChild(div);
  });
}

// --- Using .then() and .catch() ---
function fetchEventsThenCatch() {
  loadingSpinner.style.display = "block";
  eventsContainer.innerHTML = "";

  fetch("https://mockapi.io/projects/your-project/events")
    .then(response => {
      if (!response.ok) throw new Error("Network error");
      return response.json();
    })
    .then(data => {
      loadingSpinner.style.display = "none";
      renderEvents(data);
    })
    .catch(error => {
      loadingSpinner.style.display = "none";
      eventsContainer.textContent = "Error fetching events: " + error.message;
    });
}

// --- Using async/await ---
async function fetchEventsAsyncAwait() {
  try {
    loadingSpinner.style.display = "block";
    eventsContainer.innerHTML = "";

    const response = await fetch("https://mockapi.io/projects/your-project/events");
    if (!response.ok) throw new Error("Network response was not ok");

    const data = await response.json();

    loadingSpinner.style.display = "none";
    renderEvents(data);
  } catch (error) {
    loadingSpinner.style.display = "none";
    eventsContainer.textContent = "Error fetching events: " + error.message;
  }
}

// Call one of these to test:
fetchEventsThenCatch();
// or
// fetchEventsAsyncAwait();
